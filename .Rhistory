load("~/NetQuest/workspace_Ejercicio.RData")
datos[Mes %in% 1:6, .(diferentes_campanyas = length(unique(Campana))), Pais]
library(data.table)
datos[Mes %in% 1:6, .(diferentes_campanyas = length(unique(Campana))), Pais]
datos[Campana=="EM_Inboxlabs_AR" & sexo=="2",mean(edad)]
datos[Pais=="ES", .N, Mes]
datos[edad %in% 25:35 & Pais=="CL", .N]
datosm20 <-datos[edad < 20, .N, Pais]
datostotal <-datos[,.N, Pais]
datosm20
datostotal
data.frame(datostotal[,1],(datosm20[,2]/datostotal[,2])*100)
data.frame(datostotal[,1],proporcion20= ((datosm20[,2]/datostotal[,2])*100))
data.frame(datostotal[,1],"proporcion20"=((datosm20[,2]/datostotal[,2])*100))
data.frame(datostotal[,1],(datosm20[,2]/datostotal[,2])*100)
3%%3
for (i in 1:100){
if (i%%3==0){
print("Hello")
}
if (i%%5==0){
print("There")
}
if (i%%3==0 & i%%5==0){
print("HelloThere")
}
else{
print(i)
}
}
for (i in 1:100){
if (i%%3==0){
print("Hello")
next
}
if (i%%5==0){
print("There")
}
if (i%%3==0 & i%%5==0){
print("HelloThere")
}
else{
print(i)
}
}
for (i in 1:100){
if (i%%3==0){
print("Hello")
next
}
if (i%%5==0){
print("There")
next
}
if (i%%3==0 & i%%5==0){
print("HelloThere")
}
else{
print(i)
}
}
for (i in 1:100){
if (i%%3==0 & i%%5==0){
print("HelloThere")
next
}
if (i%%3==0){
print("Hello")
next
}
if (i%%5==0){
print("There")
next
}
else{
print(i)
}
}
for (i in 1:100){
if (i%%3==0 & i%%5==0){
print("HelloThere")
next
}
if (i%%3==0){
print("Hello")
next
}
if (i%%5==0){
print("There")
next
}
else{
print(i)
}
}
fib = fibonacciFunction (x) {
if (x == 0)
return (0)
n1 = 0
n2 = 1
for (i in 1:(x-1)) {
sum = n1 + n2
n1 = n2
n2 = sum
}
n2
}
fib  <- function(n)
{
if (length(n) > 1) return(sapply(n, fib)) # accept a numeric vector
if (n == 1) return(1) # first seed value
if (n == 2) return(1) # second seed value
return(fib(n-1)+fib(n-2)) # use recursion
}
fib(1)
fib(1000)
fib(2)
fib(3)
fib(4)
fib(5)
fib(8)
?source_data
library(repmis)
?source_data
?readRDS
source_data("https://github.com/martaelias/freedataviz/blob/master/mapadata2.RData?raw=True")
library(shiny)
library(knitr)
library(sp)
library(dplyr)
library(raster)
library(raster)
library(repmis)
shinyApp(
server = function(input, output) {
output$map <- renderLeaflet({
data <- switch(input$var,
"BComu" = shp@data$BComu,
"CIU" = shp@data$CIU,
"Cs" = shp@data$Cs,
"ERC" = shp@data$ERC,
"PSC" = shp@data$PSC,
"PP" = shp@data$PP,
"CUP"= shp@data$CUP)
if (data == shp@data$BComu){
pal <- colorNumeric(
palette = "Purples",
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$BComu) %>% lapply(htmltools::HTML)
}else if (data == shp@data$CIU){
pal <- colorNumeric(
palette = c("#EBF5FB", "#D6EAF8", "#AED6F1", "#85C1E9", "#5DADE2", "#3498DB", "#2E86C1",
"#2874A6", "#21618C"),
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$CIU) %>% lapply(htmltools::HTML)
}else if (data == shp@data$Cs){
pal <- colorNumeric(
palette = "Oranges",
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$Cs) %>% lapply(htmltools::HTML)
}else if (data == shp@data$ERC){
pal <- colorNumeric(
palette = c("#FBEEE6", "#F6DDCC", "#EDBB99", "#E59866", "#DC7633", "#D35400", "#BA4A00",
"#A04000", "#873600"),
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$ERC) %>% lapply(htmltools::HTML)
}else if (data == shp@data$PSC){
pal <- colorNumeric(
palette = "Reds",
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$PSC) %>% lapply(htmltools::HTML)
}else if (data == shp@data$PP) {
pal <- colorNumeric(
palette = "Blues",
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$PP) %>% lapply(htmltools::HTML)
}else if (data == shp@data$CUP){
pal <- colorNumeric(
palette = c("#FEF9E7", "#FCF3CF", "#F9E79F", "#F7DC6F", "#F4D03F", "#F1C40F", "#D4AC0D",
"#B7950B", "#9A7D0A"),
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$CUP) %>% lapply(htmltools::HTML)
}
map  <- shp %>%
leaflet() %>%
#addTiles() %>%
addProviderTiles("CartoDB") %>%
# set boundary thickness to 1 and color polygons
addPolygons(weight = 1,
color = ~pal(data),
opacity = 0.8,
fillOpacity = 0.8,
label = labels) %>%
addCircleMarkers(lng= shp@data$lon , lat=shp@data$lat, radius = ~(shp@data$Abstencio)/5, color = "black", weight=1, fillColor ="black",
fillOpacity = 1,
# add labels
label = labels) %>%
addLegend(pal = pal,
values = c(0:40),
opacity = 0.75,
title = "% votants",
position = "topright")
})},
ui = fluidPage(
titlePanel("Relació entre l'abstenció i el vot de cada partit per districte"),
sidebarLayout(
sidebarPanel(
selectInput("var",
label = "Partit Polític, eleccions 2015",
choices = c("BComu",
"CIU",
"Cs",
"ERC",
"PSC",
"PP",
"CUP"),
selected = "BComu")),
mainPanel(
leafletOutput("map"))
)
),
options = list(height = 500)
)
library(leaflet)
shinyApp(
server = function(input, output) {
output$map <- renderLeaflet({
data <- switch(input$var,
"BComu" = shp@data$BComu,
"CIU" = shp@data$CIU,
"Cs" = shp@data$Cs,
"ERC" = shp@data$ERC,
"PSC" = shp@data$PSC,
"PP" = shp@data$PP,
"CUP"= shp@data$CUP)
if (data == shp@data$BComu){
pal <- colorNumeric(
palette = "Purples",
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$BComu) %>% lapply(htmltools::HTML)
}else if (data == shp@data$CIU){
pal <- colorNumeric(
palette = c("#EBF5FB", "#D6EAF8", "#AED6F1", "#85C1E9", "#5DADE2", "#3498DB", "#2E86C1",
"#2874A6", "#21618C"),
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$CIU) %>% lapply(htmltools::HTML)
}else if (data == shp@data$Cs){
pal <- colorNumeric(
palette = "Oranges",
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$Cs) %>% lapply(htmltools::HTML)
}else if (data == shp@data$ERC){
pal <- colorNumeric(
palette = c("#FBEEE6", "#F6DDCC", "#EDBB99", "#E59866", "#DC7633", "#D35400", "#BA4A00",
"#A04000", "#873600"),
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$ERC) %>% lapply(htmltools::HTML)
}else if (data == shp@data$PSC){
pal <- colorNumeric(
palette = "Reds",
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$PSC) %>% lapply(htmltools::HTML)
}else if (data == shp@data$PP) {
pal <- colorNumeric(
palette = "Blues",
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$PP) %>% lapply(htmltools::HTML)
}else if (data == shp@data$CUP){
pal <- colorNumeric(
palette = c("#FEF9E7", "#FCF3CF", "#F9E79F", "#F7DC6F", "#F4D03F", "#F1C40F", "#D4AC0D",
"#B7950B", "#9A7D0A"),
domain = c(0,50))
labels <- sprintf(
"<strong>%s</strong><br/> Abstenció: %g%% <br/> Vot: %g%%",
shp@data$Barri, shp@data$Abstencio, shp@data$CUP) %>% lapply(htmltools::HTML)
}
map  <- shp %>%
leaflet() %>%
#addTiles() %>%
addProviderTiles("CartoDB") %>%
# set boundary thickness to 1 and color polygons
addPolygons(weight = 1,
color = ~pal(data),
opacity = 0.8,
fillOpacity = 0.8,
label = labels) %>%
addCircleMarkers(lng= shp@data$lon , lat=shp@data$lat, radius = ~(shp@data$Abstencio)/5, color = "black", weight=1, fillColor ="black",
fillOpacity = 1,
# add labels
label = labels) %>%
addLegend(pal = pal,
values = c(0:40),
opacity = 0.75,
title = "% votants",
position = "topright")
})},
ui = fluidPage(
titlePanel("Relació entre l'abstenció i el vot de cada partit per districte"),
sidebarLayout(
sidebarPanel(
selectInput("var",
label = "Partit Polític, eleccions 2015",
choices = c("BComu",
"CIU",
"Cs",
"ERC",
"PSC",
"PP",
"CUP"),
selected = "BComu")),
mainPanel(
leafletOutput("map"))
)
),
options = list(height = 500)
)
rmarkdown::render('projecte_final_web.Rmd')
setwd("C:/Users/WINDIEZ/Desktop/PostDeloitte/paginaweb")
rmarkdown::render('projecte_final_web.Rmd')
#render your sweet site.
rmarkdown::render_site()
